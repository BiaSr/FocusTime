// <auto-generated />
using System;
using FocusTime.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FocusTime.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("FocusTime.Domain.Entities.Atividade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataEntrega")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DisciplinaId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DisciplinaId");

                    b.ToTable("Atividades");

                    b.HasDiscriminator().HasValue("Atividade");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("FocusTime.Domain.Entities.Disciplina", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("CargaHoraria")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Disciplinas");

                    b.HasDiscriminator().HasValue("Disciplina");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("FocusTime.Domain.Entities.Prova", b =>
                {
                    b.HasBaseType("FocusTime.Domain.Entities.Atividade");

                    b.HasDiscriminator().HasValue("Prova");
                });

            modelBuilder.Entity("FocusTime.Domain.Entities.Revisao", b =>
                {
                    b.HasBaseType("FocusTime.Domain.Entities.Atividade");

                    b.HasDiscriminator().HasValue("Revisao");
                });

            modelBuilder.Entity("FocusTime.Domain.Entities.Trabalho", b =>
                {
                    b.HasBaseType("FocusTime.Domain.Entities.Atividade");

                    b.HasDiscriminator().HasValue("Trabalho");
                });

            modelBuilder.Entity("FocusTime.Domain.Entities.DisciplinaPratica", b =>
                {
                    b.HasBaseType("FocusTime.Domain.Entities.Disciplina");

                    b.HasDiscriminator().HasValue("DisciplinaPratica");
                });

            modelBuilder.Entity("FocusTime.Domain.Entities.DisciplinaTeorica", b =>
                {
                    b.HasBaseType("FocusTime.Domain.Entities.Disciplina");

                    b.HasDiscriminator().HasValue("DisciplinaTeorica");
                });

            modelBuilder.Entity("FocusTime.Domain.Entities.Atividade", b =>
                {
                    b.HasOne("FocusTime.Domain.Entities.Disciplina", "Disciplina")
                        .WithMany()
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Disciplina");
                });
#pragma warning restore 612, 618
        }
    }
}
